<?xml version="1.0"?>

<project name="Thinking in Java (statemachine)" default="statemachine.run" basedir=".">

  <description>
  build.xml for statemachine of "Thinking in Java, 3rd Edition"
  by Bruce Eckel
  Available at http://www.MindView.net
  See copyright notice in CopyRight.txt

  Ant must be downloaded from:
  http://jakarta.apache.org/ant

  Options:
  ant
    compiles and runs all examples (if necessary)
  ant test
    compiles and runs all examples
  ant statemachine.build
    compiles but does not run examples
  ant clean
    removes old class files
  </description>
  
  <target name="JDK.version.check" unless="JDK.version.ok">
    <javac
      includes="CheckVersion.java"
      srcdir="${basedir}/../com/bruceeckel/tools/"
      classpath="${basedir}/.."
    />
    <java
      taskname="CheckVersion"
      classname="com.bruceeckel.tools.CheckVersion"
      classpath="${basedir}/.."
      fork="true"
      failonerror="true"
    />
    <property name="JDK.version.ok" value="true"/>
  </target>
  
  <!-- build all dependencies and check to see if tests are up to date -->
  <target name="statemachine.prepare">
    <condition property="test.run" value="true">
      <or>
        <uptodate>
          <srcfiles dir= "${basedir}" includes="**/*Output.txt"/>
          <mapper type="glob" from="*Output.txt" to="*.class"/>
        </uptodate>
        <available file="failed"/>
      </or>
    </condition>
    <ant
      antfile="${basedir}/../com/build.xml"
      target="com.build"
      dir="${basedir}/../com"
      output="${basedir}/../com/log.txt"
    />
    <ant
      antfile="${basedir}/../statemachine2/build.xml"
      target="statemachine2.build"
      dir="${basedir}/../statemachine2"
      output="${basedir}/../statemachine2/log.txt"
    />
  </target>

  <!-- build all classes in this directory -->
  <target name="statemachine.build" depends="JDK.version.check,statemachine.prepare"
    description="Compile all source files">
    <javac
      srcdir="${basedir}"
      classpath="${basedir}/.."
      source="1.4"
    />
  </target>
  
  <!-- force all tests to be run -->
  <target name="test" description="Compile and test all examples">
    <property name="test.run" value="true"/>
    <antcall target="statemachine.run"/>
  </target>

  <!-- run all untested examples in this directory -->
  <target name="statemachine.run" depends="statemachine.build" if="test.run"
    description="Compile and run untested examples">
    <touch file="failed"/>
    <antcall target="MouseTrapTest.run"/>
    <antcall target="MouseTrap2Test.run"/>
    <antcall target="VendingMachineTest.run"/>
    <delete file="failed"/>
  </target>
  
  <target name="MouseTrapTest.run">
    <java
      taskname="MouseTrapTest"
      classname="statemachine.mousetrap1.MouseTrapTest"
      classpath="${basedir}/.."
      dir="../statemachine/mousetrap1"
      fork="true" 
      failonerror="true"
    />
  </target>

  <target name="MouseTrap2Test.run">
    <java
      taskname="MouseTrap2Test"
      classname="statemachine.mousetrap2.MouseTrap2Test"
      classpath="${basedir}/.."
      dir="../statemachine/mousetrap2"
      fork="true" 
      failonerror="true"
    />
  </target>

  <target name="VendingMachineTest.run">
    <java
      taskname="VendingMachineTest"
      classname="statemachine.vendingmachine.VendingMachineTest"
      classpath="${basedir}/.."
      dir="../statemachine/vendingmachine"
      fork="true" 
      failonerror="true"
    />
  </target>

  <!-- delete all class files, javadocs, and other byproducts -->
  <target name="clean" description="Removes all old class files">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*Output.txt"/>
      <fileset dir="${basedir}" includes="**/log.txt"/>
      <fileset dir="${basedir}" includes="failed"/>
    </delete>
    <echo message="clean successful"/>
  </target>

  <target name="jcsc">
    <taskdef name="jcsc" classname="rj.tools.jcsc.ant.JCSCTask"/>
    <jcsc rules="${basedir}/../tij.jcsc"
      startpackage="statemachine"
      destdir="${basedir}/../jcsc"
      worstcount="20">
      <fileset dir="${basedir}" includes="**/*.java"/>
    </jcsc>
  </target>
  
</project>
